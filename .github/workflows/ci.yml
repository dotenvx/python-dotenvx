name: ci

on:
  push:
    branches: [main]
    tags: ['*']
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11"]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

  # run only on semantic version tag
  release:
    needs: test
    if: startsWith(github.ref, 'refs/tags/v') && contains(github.ref, '.')
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
    steps:
      - name: checkout
        uses: actions/checkout@v4

      # GITHUB_ENV operates like a .env file
      - name: extract version
        run: |
          VERSION=${GITHUB_REF#refs/tags/}
          CLEAN_VERSION=${VERSION#v}
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "CLEAN_VERSION=$CLEAN_VERSION" >> $GITHUB_ENV

  pypi:
    needs: release
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v3
        with:
          python-version: '3.x'
      - name: install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine build
      - name: publish
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: make release
